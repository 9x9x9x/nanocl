name: Draft nanocl nightly release

on:
  push:
    branches:
      - 'release-nightly-nanocl-*'
  pull_request:
    branches:
      - 'release-nightly-nanocl-*'
    types: [opened, synchronize, closed]

env:
  CARGO_TERM_COLOR: always

jobs:
  release_image:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Cache register
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: buildx-cache
    - name: Set branch name
      run: echo "BRANCH_NAME=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
    - name: Print branch name
      run: echo $BRANCH_NAME
    - name: Get bin name
      run: echo "BINARY_NAME=$(echo $BRANCH_NAME | awk -F- '{print $2}')" >> $GITHUB_ENV
    - name: Set version
      run: echo "VERSION=$(echo $BRANCH_NAME | awk -F- '{print $3}')" >> $GITHUB_ENV
    - name: Print BINARY_NAME and VERSION
      run: |
        echo $BINARY_NAME
        echo $VERSION
    - name: Build binary
      run: ./scripts/release_nanocl.sh
    # - name: Tag image
    #   run: |
    #     docker tag $BINARY_NAME:nightly-$VERSION nexthat/$BINARY_NAME:nightly
    #     docker tag $BINARY_NAME:nightly-$VERSION nexthat/$BINARY_NAME:nightly-$VERSION
    # - name: Log in to Docker Hub
    #   uses: docker/login-action@v1
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USER }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
    # - name: Pull image
    #   run: |
    #     docker push nexthat/$BINARY_NAME:nightly
    #     docker push nexthat/$BINARY_NAME:nightly-$VERSION
    - name: Test if release already exists
      id: release-exists
      continue-on-error: true
      run: gh release view $BINARY_NAME-nightly-$VERSION
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
    - name: Create new draft release
      if: steps.release-exists.outcome == 'failure' && steps.release-exists.conclusion == 'success'
      run: gh release create -d $BINARY_NAME-nightly-$VERSION --generate-notes /tmp/$BINARY_NAME-nightly-$VERSION.tar.gz#nanocld-image
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
    - name: Update draft release
      if: steps.release-exists.outcome == 'success' && steps.release-exists.conclusion == 'success'
      run: >-
        gh release delete-asset -y $BINARY_NAME-nightly-$VERSION nanocl.$VERSION.tar.gz;
        gh release upload $BINARY_NAME-nightly-$VERSION /tmp/$BINARY_NAME-nightly-$VERSION.tar.gz#nanocld-image;
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
